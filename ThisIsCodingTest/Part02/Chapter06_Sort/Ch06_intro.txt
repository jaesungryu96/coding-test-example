01. 기준에 따라 데이터를 정렬

정렬 알고리즘 개요

정렬(Sorting)이란 데이터를 특정한 기준에 따라서 순서대로 나열하는 것을 말한다. 정렬 알고리즘은 굉장히 많지만, 선택 정렬, 삽입 정렬,
퀵 정렬, 계수 정렬을 알아보도록 하자.

선택 정렬 (Selection Sort)

선택 정렬은 무작위로 데이터가 있을 때, 이 중에서 가장 작은 데이터를 선택해 맨 앞에 있는 데이터와 바꾸고, 그다음 작은 데이터를 선택해 앞에서
두 번째 데이터와 바꾸는 과정을 반복한다

가장 작은 데이터를 앞으로 보내는 작업을 N-1 번 반복하면 정렬이 완료된다.

선택 정렬은 매번 가장 작은 수를 찾기 위한 비교연산이 필요하기 때문에, 연산횟수는 N + (N-1) + ... + 2, 따라서 근서치로 N X (N + 1) / 2의
연산이 필요하기 때문에, 시간 복잡도는 O(N^2)이다.

삽입 정렬 (Insertion Sort)

삽입 정렬은 특정한 데이터를 적절한 위치에 '삽입'한다는 의미이다.

삽입 정렬의 시간 복잡도는 O(N^2)이며, 데이터가 거의 정렬되어 있는 최선의 상태라면 O(N)의 시간 복잡도를 가진다. 뒤에 배울 퀵 정렬에 비해
대부분의 경우에서 느리지만, 거의 다 정렬되어 있는 상태에서는 퀵 정렬보다 빠르다.

퀵 정렬 (Quick Sort)

가장 많이 사용되는 정렬 알고리즘이다. 대부분의 프로그래밍 언어에서 정렬 라이브러리의 근간이 된다. 동작 방식은 다음과 같다.

피벗을 설정한 뒤에 왼쪽에서부터 피벗보다 큰 데이터를 찾고, 오른쪽에서부터는 피벗보다 작은 데이터를 찾는다. 그다음 큰 데이터와 작은 데이터의
위치를 서로 교환해준다.

계수 정렬 (Count sort)

계수 정렬 알고리즘은 특정한 조건이 부합할 때만 사용할 수 있지만 매우 빠른 정렬 알고리즘이다. 특정한 조건이란, 데이터의 크기 범위가 제한 되어
정수 형태로 표현할 수 있을 때'이다. 정렬 방식은 다음과 같다.

array = [7, 5, 9, 0, 3, 1, 6, 2, 9, 1, 4, 8, 0, 5, 2] 인 데이터가 있을 때, 데이터의 가지수 = 길이인 리스트를 선언한다. 이 때는
크기가 10인 리스트를 선언하면 된다. 그다음 데이터를 하나씩 확인하며 데이터의 값과 동일한 인덱스의 데이터를 1씩 증가시키면 계수 정렬은 완료된다.

위 예의 결과는 001122345567899가 된다.

계수 정렬의 시간 복잡도는 데이터의 개수 N, 데이터 중 최대값의 크기 K라 할 때, O(N + K)이다.
공간 복잡도 또한 O(N + K)이지만, 0과 999999만 들어가 있는 경우 리스트 크기가 10000만이기 때문에, 동일한 값을 가지는 데이터가 여러 개 등장할 때 적합하다.


파이썬의 정렬 라이브러리

파이썬의 기본 정렬 라이브러리 sorted()는 퀵 정렬과 동작 방식이 비슷한 병합 정렬을 기반으로 만들어졌는데, 병합 정렬은 일반적으로 퀵 정렬보다 느리지만,
최악의 경우에도 시간 복잡도 O(NlogN)을 보장한다.